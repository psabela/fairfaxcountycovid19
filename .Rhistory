detach("package:NLP", unload = TRUE)
install.packages("text2vec")
filename
filename <- "prdtmd_nhpfin2_8412279.lis"
filename
gsub('.lis','.csv', filename)
filename <- "prdtmd_nhpfin2_8412279.lis"
#read file
banner <- read_table(filename)
allinone <- read_lines(filename, n_max = -1)
banner <- data.frame(ALL = allinone)
banner$ALL <- as.character(banner$ALL)
btrans <- banner %>%
mutate(RUN_DATE = ifelse(grepl('RUN DATE',ALL), str_sub(ALL,122,133), NA))
btrans <- btrans %>%
mutate(RUN_TIME = ifelse(grepl('RUN TIME',ALL), str_sub(ALL,122,130),NA))
btrans <- btrans %>%
mutate(REPORT_FOCUS = ifelse(grepl('S U M M A R Y',ALL), 'SUMMARY',
ifelse(grepl('D E T A I L',ALL),'DETAIL',NA)))
btrans <- btrans %>%
mutate(PAYROLL_ID = ifelse(grepl('Payroll Id',ALL), str_sub(ALL,63,66),NA))
btrans <- btrans %>%
mutate(PAYROLL_NUMBER = ifelse(grepl('Payroll Id',ALL), str_sub(ALL,83,85),NA))
btrans <- btrans %>%
mutate(PAY_PERIOD = ifelse(grepl('Pay Period',ALL), str_sub(ALL,60,86),NA))
btrans <- btrans %>% mutate(COAS_CODE = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,12,13),NA))
btrans <- btrans %>% mutate(FISCAL_YR = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,27,31),NA))
btrans <- btrans %>% mutate(CATEGORY = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,44,83),NA))
btrans <- btrans %>% mutate(RULE_CLASS = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,96,100),NA))
btrans <- btrans %>% mutate(PAYROLL = str_trim(ifelse(grepl('^COAS CODE',ALL),  str_sub(ALL,111,211),NA)))
btrans <- btrans %>% fill(RUN_DATE, .direction = "down")
btrans <- btrans %>% fill(RUN_TIME, .direction = "down")
btrans <- btrans %>% fill(COAS_CODE, .direction = "down")
btrans <- btrans %>% fill(FISCAL_YR, .direction = "down")
btrans <- btrans %>% fill(CATEGORY, .direction = "down")
btrans <- btrans %>% fill(RULE_CLASS, .direction = "down")
btrans <- btrans %>% fill(PAYROLL, .direction = "down")
btrans <- btrans %>% fill(PAYROLL_ID, .direction = "down")
btrans <- btrans %>% fill(PAYROLL_NUMBER, .direction = "down")
btrans <- btrans %>% fill(PAY_PERIOD, .direction = "down")
btrans <- btrans %>% fill(REPORT_FOCUS, .direction = "down")
btrans <- btrans %>% filter(!is.na(ALL) &
!grepl('(T O T|C A T E|S U M M A R Y|REPORT|PAGE|COAS CODE|RUN TIME)',ALL) &
ALL!='' )
btrans <- btrans %>% mutate(FUND = str_sub(ALL,1,7))
btrans <- btrans %>% mutate(ORGN = str_sub(ALL,8,14))
btrans <- btrans %>% mutate(ACCT = str_sub(ALL,15,20))
btrans <- btrans %>% mutate(PROG = str_sub(ALL,22,25))
btrans <- btrans %>% mutate(ACTV = str_sub(ALL,29,35))
btrans <- btrans %>% mutate(PAY_DOC = str_sub(ALL,43,51))
btrans <- btrans %>% mutate(PAS_DOC = str_sub(ALL,52,60))
btrans <- btrans %>% mutate(KEY = ifelse(grepl('FUND',ALL),str_sub(ALL,63,90),NA))
btrans <- btrans %>% mutate(VALUE = str_sub(ALL,63,90))
btrans <- btrans %>% fill(KEY, .direction = "down")
btrans <- btrans %>% mutate(EMPLOYEE_ID = ifelse(grepl('EMPLOYEE NAME',KEY),str_sub(ALL,91,100),NA))
btrans <- btrans %>% mutate(AMOUNT = str_sub(ALL,100,116))
btrans <- btrans %>% mutate(DR_CR = str_sub(ALL,117,119))
btrans <- btrans %>% mutate(SOURCE = str_sub(ALL,120,130))
btrans <- btrans %>% filter(grepl('^[0-9]{6}',ALL))
filename <- "prdtmd_nhpfin2_8412279.lis"
#read file
banner <- read_table(filename)
allinone <- read_lines(filename, n_max = -1)
banner <- data.frame(ALL = allinone)
banner$ALL <- as.character(banner$ALL)
btrans <- banner %>%
mutate(RUN_DATE = ifelse(grepl('RUN DATE',ALL), str_sub(ALL,122,133), NA))
btrans <- btrans %>%
mutate(RUN_TIME = ifelse(grepl('RUN TIME',ALL), str_sub(ALL,122,130),NA))
btrans <- btrans %>%
mutate(REPORT_FOCUS = ifelse(grepl('S U M M A R Y',ALL), 'SUMMARY',
ifelse(grepl('D E T A I L',ALL),'DETAIL',NA)))
btrans <- btrans %>%
mutate(PAYROLL_ID = ifelse(grepl('Payroll Id',ALL), str_sub(ALL,63,66),NA))
btrans <- btrans %>%
mutate(PAYROLL_NUMBER = ifelse(grepl('Payroll Id',ALL), str_sub(ALL,83,85),NA))
btrans <- btrans %>%
mutate(PAY_PERIOD = ifelse(grepl('Pay Period',ALL), str_sub(ALL,60,86),NA))
btrans <- btrans %>% mutate(COAS_CODE = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,12,13),NA))
btrans <- btrans %>% mutate(FISCAL_YR = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,27,31),NA))
btrans <- btrans %>% mutate(CATEGORY = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,44,83),NA))
btrans <- btrans %>% mutate(RULE_CLASS = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,96,100),NA))
btrans <- btrans %>% mutate(PAYROLL = str_trim(ifelse(grepl('^COAS CODE',ALL),  str_sub(ALL,111,211),NA)))
btrans <- btrans %>% fill(RUN_DATE, .direction = "down")
btrans <- btrans %>% fill(RUN_TIME, .direction = "down")
btrans <- btrans %>% fill(COAS_CODE, .direction = "down")
btrans <- btrans %>% fill(FISCAL_YR, .direction = "down")
btrans <- btrans %>% fill(CATEGORY, .direction = "down")
btrans <- btrans %>% fill(RULE_CLASS, .direction = "down")
btrans <- btrans %>% fill(PAYROLL, .direction = "down")
btrans <- btrans %>% fill(PAYROLL_ID, .direction = "down")
btrans <- btrans %>% fill(PAYROLL_NUMBER, .direction = "down")
btrans <- btrans %>% fill(PAY_PERIOD, .direction = "down")
btrans <- btrans %>% fill(REPORT_FOCUS, .direction = "down")
btrans <- btrans %>% filter(!is.na(ALL) &
!grepl('(T O T|C A T E|S U M M A R Y|REPORT|PAGE|COAS CODE|RUN TIME)',ALL) &
ALL!='' )
btrans <- btrans %>% mutate(FUND = str_sub(ALL,1,7))
btrans <- btrans %>% mutate(ORGN = str_sub(ALL,8,14))
btrans <- btrans %>% mutate(ACCT = str_sub(ALL,15,20))
btrans <- btrans %>% mutate(PROG = str_sub(ALL,22,25))
btrans <- btrans %>% mutate(ACTV = str_sub(ALL,29,35))
btrans <- btrans %>% mutate(PAY_DOC = str_sub(ALL,43,51))
btrans <- btrans %>% mutate(PAS_DOC = str_sub(ALL,52,60))
btrans <- btrans %>% mutate(KEY = ifelse(grepl('FUND',ALL),str_sub(ALL,63,90),NA))
btrans <- btrans %>% mutate(VALUE = str_sub(ALL,63,90))
btrans <- btrans %>% fill(KEY, .direction = "down")
btrans <- btrans %>% mutate(EMPLOYEE_ID = ifelse(grepl('EMPLOYEE NAME',KEY),str_sub(ALL,91,100),NA))
btrans <- btrans %>% mutate(AMOUNT = str_sub(ALL,100,116))
btrans <- btrans %>% mutate(DR_CR = str_sub(ALL,117,119))
btrans <- btrans %>% mutate(SOURCE = str_sub(ALL,120,130))
btrans <- btrans %>% filter(grepl('^[0-9]{6}',ALL))
filename <- "prdtmd_nhpfin2_8412279.lis"
#read file
banner <- read_table(filename)
allinone <- read_lines(filename, n_max = -1)
banner <- data.frame(ALL = allinone)
banner$ALL <- as.character(banner$ALL)
btrans <- banner %>%
mutate(RUN_DATE = ifelse(grepl('RUN DATE',ALL), str_sub(ALL,122,133), NA))
btrans <- btrans %>%
mutate(RUN_TIME = ifelse(grepl('RUN TIME',ALL), str_sub(ALL,122,130),NA))
btrans <- btrans %>%
mutate(REPORT_FOCUS = ifelse(grepl('S U M M A R Y',ALL), 'SUMMARY',
ifelse(grepl('D E T A I L',ALL),'DETAIL',NA)))
btrans <- btrans %>%
mutate(PAYROLL_ID = ifelse(grepl('Payroll Id',ALL), str_sub(ALL,63,66),NA))
btrans <- btrans %>%
mutate(PAYROLL_NUMBER = ifelse(grepl('Payroll Id',ALL), str_sub(ALL,83,85),NA))
btrans <- btrans %>%
mutate(PAY_PERIOD = ifelse(grepl('Pay Period',ALL), str_sub(ALL,60,86),NA))
btrans <- btrans %>% mutate(COAS_CODE = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,12,13),NA))
btrans <- btrans %>% mutate(FISCAL_YR = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,27,31),NA))
btrans <- btrans %>% mutate(CATEGORY = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,44,83),NA))
btrans <- btrans %>% mutate(RULE_CLASS = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,96,100),NA))
btrans <- btrans %>% mutate(PAYROLL = str_trim(ifelse(grepl('^COAS CODE',ALL),  str_sub(ALL,111,211),NA)))
btrans <- btrans %>% fill(RUN_DATE, .direction = "down")
btrans <- btrans %>% fill(RUN_TIME, .direction = "down")
btrans <- btrans %>% fill(COAS_CODE, .direction = "down")
btrans <- btrans %>% fill(FISCAL_YR, .direction = "down")
btrans <- btrans %>% fill(CATEGORY, .direction = "down")
btrans <- btrans %>% fill(RULE_CLASS, .direction = "down")
btrans <- btrans %>% fill(PAYROLL, .direction = "down")
btrans <- btrans %>% fill(PAYROLL_ID, .direction = "down")
btrans <- btrans %>% fill(PAYROLL_NUMBER, .direction = "down")
btrans <- btrans %>% fill(PAY_PERIOD, .direction = "down")
btrans <- btrans %>% fill(REPORT_FOCUS, .direction = "down")
btrans <- btrans %>% filter(!is.na(ALL) &
!grepl('(T O T|C A T E|S U M M A R Y|REPORT|PAGE|COAS CODE|RUN TIME)',ALL) &
ALL!='' )
btrans <- btrans %>% mutate(FUND = str_sub(ALL,1,7))
btrans <- btrans %>% mutate(ORGN = str_sub(ALL,8,14))
btrans <- btrans %>% mutate(ACCT = str_sub(ALL,15,20))
btrans <- btrans %>% mutate(PROG = str_sub(ALL,22,25))
btrans <- btrans %>% mutate(ACTV = str_sub(ALL,29,35))
btrans <- btrans %>% mutate(PAY_DOC = str_sub(ALL,43,51))
btrans <- btrans %>% mutate(PAS_DOC = str_sub(ALL,52,60))
btrans <- btrans %>% mutate(KEY = ifelse(grepl('FUND',ALL),str_sub(ALL,63,90),NA))
btrans <- btrans %>% mutate(VALUE = str_sub(ALL,63,90))
btrans <- btrans %>% fill(KEY, .direction = "down")
btrans <- btrans %>% mutate(EMPLOYEE_ID = ifelse(grepl('EMPLOYEE NAME',KEY),str_sub(ALL,91,100),NA))
btrans <- btrans %>% mutate(AMOUNT = str_sub(ALL,100,116))
btrans <- btrans %>% mutate(DR_CR = str_sub(ALL,117,119))
btrans <- btrans %>% mutate(SOURCE = str_sub(ALL,120,130))
btrans <- btrans %>% filter(grepl('^[0-9]{6}',ALL))
filename <- "prdtmd_nhpfin2_8412279.lis"
#read file
banner <- read_table(filename)
installed_packages <- 'pacman' %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) { install.packages("pacman") }
library(pacman)
pacman::p_load(tidyverse, readr, readxl, stringr ,lubridate)
filename <- "prdtmd_nhpfin2_8412279.lis"
#read file
banner <- read_table(filename)
allinone <- read_lines(filename, n_max = -1)
banner <- data.frame(ALL = allinone)
banner$ALL <- as.character(banner$ALL)
btrans <- banner %>%
mutate(RUN_DATE = ifelse(grepl('RUN DATE',ALL), str_sub(ALL,122,133), NA))
btrans <- btrans %>%
mutate(RUN_TIME = ifelse(grepl('RUN TIME',ALL), str_sub(ALL,122,130),NA))
btrans <- btrans %>%
mutate(REPORT_FOCUS = ifelse(grepl('S U M M A R Y',ALL), 'SUMMARY',
ifelse(grepl('D E T A I L',ALL),'DETAIL',NA)))
btrans <- btrans %>%
mutate(PAYROLL_ID = ifelse(grepl('Payroll Id',ALL), str_sub(ALL,63,66),NA))
btrans <- btrans %>%
mutate(PAYROLL_NUMBER = ifelse(grepl('Payroll Id',ALL), str_sub(ALL,83,85),NA))
btrans <- btrans %>%
mutate(PAY_PERIOD = ifelse(grepl('Pay Period',ALL), str_sub(ALL,60,86),NA))
btrans <- btrans %>% mutate(COAS_CODE = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,12,13),NA))
btrans <- btrans %>% mutate(FISCAL_YR = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,27,31),NA))
btrans <- btrans %>% mutate(CATEGORY = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,44,83),NA))
btrans <- btrans %>% mutate(RULE_CLASS = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,96,100),NA))
btrans <- btrans %>% mutate(PAYROLL = str_trim(ifelse(grepl('^COAS CODE',ALL),  str_sub(ALL,111,211),NA)))
btrans <- btrans %>% fill(RUN_DATE, .direction = "down")
btrans <- btrans %>% fill(RUN_TIME, .direction = "down")
btrans <- btrans %>% fill(COAS_CODE, .direction = "down")
btrans <- btrans %>% fill(FISCAL_YR, .direction = "down")
btrans <- btrans %>% fill(CATEGORY, .direction = "down")
btrans <- btrans %>% fill(RULE_CLASS, .direction = "down")
btrans <- btrans %>% fill(PAYROLL, .direction = "down")
btrans <- btrans %>% fill(PAYROLL_ID, .direction = "down")
btrans <- btrans %>% fill(PAYROLL_NUMBER, .direction = "down")
btrans <- btrans %>% fill(PAY_PERIOD, .direction = "down")
btrans <- btrans %>% fill(REPORT_FOCUS, .direction = "down")
btrans <- btrans %>% filter(!is.na(ALL) &
!grepl('(T O T|C A T E|S U M M A R Y|REPORT|PAGE|COAS CODE|RUN TIME)',ALL) &
ALL!='' )
btrans <- btrans %>% mutate(FUND = str_sub(ALL,1,7))
btrans <- btrans %>% mutate(ORGN = str_sub(ALL,8,14))
btrans <- btrans %>% mutate(ACCT = str_sub(ALL,15,20))
btrans <- btrans %>% mutate(PROG = str_sub(ALL,22,25))
btrans <- btrans %>% mutate(ACTV = str_sub(ALL,29,35))
btrans <- btrans %>% mutate(PAY_DOC = str_sub(ALL,43,51))
btrans <- btrans %>% mutate(PAS_DOC = str_sub(ALL,52,60))
btrans <- btrans %>% mutate(KEY = ifelse(grepl('FUND',ALL),str_sub(ALL,63,90),NA))
btrans <- btrans %>% mutate(VALUE = str_sub(ALL,63,90))
btrans <- btrans %>% fill(KEY, .direction = "down")
btrans <- btrans %>% mutate(EMPLOYEE_ID = ifelse(grepl('EMPLOYEE NAME',KEY),str_sub(ALL,91,100),NA))
btrans <- btrans %>% mutate(AMOUNT = str_sub(ALL,100,116))
btrans <- btrans %>% mutate(DR_CR = str_sub(ALL,117,119))
btrans <- btrans %>% mutate(SOURCE = str_sub(ALL,120,130))
btrans <- btrans %>% filter(grepl('^[0-9]{6}',ALL))
write_csv(btrans,gsub('.lis','.csv', filename))
unique(btrans$REPORT_FOCUS)
write_csv(btrans %>% filter(REPORT_FOCUS == 'DETAIL'),
gsub('.lis','.csv', filename))
lis_to_csv <- function(filename){
installed_packages <- 'pacman' %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) { install.packages("pacman") }
library(pacman)
pacman::p_load(tidyverse, readr, readxl, stringr ,lubridate)
#read file
banner <- read_table(filename)
allinone <- read_lines(filename, n_max = -1)
banner <- data.frame(ALL = allinone)
banner$ALL <- as.character(banner$ALL)
btrans <- banner %>%
mutate(RUN_DATE = ifelse(grepl('RUN DATE',ALL), str_sub(ALL,122,133), NA))
btrans <- btrans %>%
mutate(RUN_TIME = ifelse(grepl('RUN TIME',ALL), str_sub(ALL,122,130),NA))
btrans <- btrans %>%
mutate(REPORT_FOCUS = ifelse(grepl('S U M M A R Y',ALL), 'SUMMARY',
ifelse(grepl('D E T A I L',ALL),'DETAIL',NA)))
btrans <- btrans %>%
mutate(PAYROLL_ID = ifelse(grepl('Payroll Id',ALL), str_sub(ALL,63,66),NA))
btrans <- btrans %>%
mutate(PAYROLL_NUMBER = ifelse(grepl('Payroll Id',ALL), str_sub(ALL,83,85),NA))
btrans <- btrans %>%
mutate(PAY_PERIOD = ifelse(grepl('Pay Period',ALL), str_sub(ALL,60,86),NA))
btrans <- btrans %>% mutate(COAS_CODE = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,12,13),NA))
btrans <- btrans %>% mutate(FISCAL_YR = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,27,31),NA))
btrans <- btrans %>% mutate(CATEGORY = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,44,83),NA))
btrans <- btrans %>% mutate(RULE_CLASS = ifelse(grepl('^COAS CODE',ALL),str_sub(ALL,96,100),NA))
btrans <- btrans %>% mutate(PAYROLL = str_trim(ifelse(grepl('^COAS CODE',ALL),  str_sub(ALL,111,211),NA)))
btrans <- btrans %>% fill(RUN_DATE, .direction = "down")
btrans <- btrans %>% fill(RUN_TIME, .direction = "down")
btrans <- btrans %>% fill(COAS_CODE, .direction = "down")
btrans <- btrans %>% fill(FISCAL_YR, .direction = "down")
btrans <- btrans %>% fill(CATEGORY, .direction = "down")
btrans <- btrans %>% fill(RULE_CLASS, .direction = "down")
btrans <- btrans %>% fill(PAYROLL, .direction = "down")
btrans <- btrans %>% fill(PAYROLL_ID, .direction = "down")
btrans <- btrans %>% fill(PAYROLL_NUMBER, .direction = "down")
btrans <- btrans %>% fill(PAY_PERIOD, .direction = "down")
btrans <- btrans %>% fill(REPORT_FOCUS, .direction = "down")
btrans <- btrans %>% filter(!is.na(ALL) &
!grepl('(T O T|C A T E|S U M M A R Y|REPORT|PAGE|COAS CODE|RUN TIME)',ALL) &
ALL!='' )
btrans <- btrans %>% mutate(FUND = str_sub(ALL,1,7))
btrans <- btrans %>% mutate(ORGN = str_sub(ALL,8,14))
btrans <- btrans %>% mutate(ACCT = str_sub(ALL,15,20))
btrans <- btrans %>% mutate(PROG = str_sub(ALL,22,25))
btrans <- btrans %>% mutate(ACTV = str_sub(ALL,29,35))
btrans <- btrans %>% mutate(PAY_DOC = str_sub(ALL,43,51))
btrans <- btrans %>% mutate(PAS_DOC = str_sub(ALL,52,60))
btrans <- btrans %>% mutate(KEY = ifelse(grepl('FUND',ALL),str_sub(ALL,63,90),NA))
btrans <- btrans %>% mutate(VALUE = str_sub(ALL,63,90))
btrans <- btrans %>% fill(KEY, .direction = "down")
btrans <- btrans %>% mutate(EMPLOYEE_ID = ifelse(grepl('EMPLOYEE NAME',KEY),str_sub(ALL,91,100),NA))
btrans <- btrans %>% mutate(AMOUNT = str_sub(ALL,100,116))
btrans <- btrans %>% mutate(DR_CR = str_sub(ALL,117,119))
btrans <- btrans %>% mutate(SOURCE = str_sub(ALL,120,130))
btrans <- btrans %>% filter(grepl('^[0-9]{6}',ALL))
write_csv(btrans %>% filter(REPORT_FOCUS == 'DETAIL'),
gsub('.lis','.csv', filename))
}
x <- dget(lis_to_csv)
x <- dget('lis_to_csv')
x <- dget('lis_to_csv')
setwd("C:/Users/psabela/Desktop/R workspace/monarch")
x <- dget('banner_monarch')
getwd()
x <- dget(banner_monarch)
x <- dget(lis_to_csv)
x <- dget(lis_to_csv.R)
?dget
x <- dget("lis_to_csv.R")
x("prdtmd_nhpfin2_8412279.lis")
unique(btrans$DR_CR)
btrans$DR_CR <- trimws(btrans$DR_CR)
unique(btrans$DR_CR)
x <- dget("lis_to_csv.R")
x("prdtmd_nhpfin2_8412279.lis")
btrans %>% View
#supply the name of the lis file
x("prdtmd_nhpfin2_8412279.lis")
library(readr)
prdtmd_nhpfin2_8412279 <- read_csv("prdtmd_nhpfin2_8412279.csv")
View(prdtmd_nhpfin2_8412279)
prdtmd_nhpfin2_8412279$EMPLOYEE_ID
gb_common.F_GET_ID(prdtmd_nhpfin2_8412279$EMPLOYEE_ID)
gb_common.F_GET_PIDM(prdtmd_nhpfin2_8412279$EMPLOYEE_ID)
gb_common.F_GET_PIDM(prdtmd_nhpfin2_8412279$EMPLOYEE_ID)
prdtmd_nhpfin2_8412279 %>% distinct(PAYROLL_ID)
installed_packages <- 'pacman' %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) { install.packages("pacman") }
library(pacman)
pacman::p_load(tidyverse, readr, ggplot2 ,lubridate, NLP, tm)
setwd("C:/Users/psabela/Desktop/R workspace/fairfaxcountycovid19")
df <- read_tsv("fairfaxcountycoronavirus.tsv")
my <- 850
df %>% ggplot() +
geom_line(aes(x = date, y = count)) +
scale_x_date(date_labels="%d %b",date_breaks  ="1 day") +
geom_vline(xintercept = ymd('2020-03-16'), colour="blue") +
geom_text(aes(x=ymd('2020-03-16'), label="\nSchools Closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-23'), colour="red") +
geom_text(aes(x=ymd('2020-03-23'), label="\nBusinesses and playgrounds closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-24'), colour="orange") +
geom_text(aes(x=ymd('2020-03-24'), label="\nGov Buildings and parks closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-31'), colour="brown") +
geom_text(aes(x=ymd('2020-03-31'), label="\nStay at Home Order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-30'),colour="blue", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-03-30'), label="\n14 days after schools closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-06'),colour="red", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-06'), label="\n14 days after businesses and parks closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-07'),colour="orange", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-07'), label="\n14 days after Gov buildings closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-14'),colour="brown", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-14'), label="\n14 days after stay at home order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
ggtitle(label = 'Fairfax County, Virginia, COVID-19 Cases',subtitle = "source: https://www.fairfaxcounty.gov/covid19/case-information (chart by Peter Sabela)") +
ylab(label = "count") +
theme(panel.grid.minor =   element_blank(),
panel.grid.major =   element_line(colour = "white",size=0.75)) +
scale_y_continuous(position = "right", breaks = seq(from = 0,to = 2500,by = 100))
btrans %>% View
df %>% ggplot() +
geom_line(aes(x = date, y = count)) +
scale_x_date(date_labels="%m/%e",date_breaks  ="1 day") +
geom_vline(xintercept = ymd('2020-03-16'), colour="blue") +
geom_text(aes(x=ymd('2020-03-16'), label="\nSchools Closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-23'), colour="red") +
geom_text(aes(x=ymd('2020-03-23'), label="\nBusinesses and playgrounds closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-24'), colour="orange") +
geom_text(aes(x=ymd('2020-03-24'), label="\nGov Buildings and parks closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-31'), colour="brown") +
geom_text(aes(x=ymd('2020-03-31'), label="\nStay at Home Order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-30'),colour="blue", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-03-30'), label="\n14 days after schools closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-06'),colour="red", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-06'), label="\n14 days after businesses and parks closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-07'),colour="orange", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-07'), label="\n14 days after Gov buildings closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-14'),colour="brown", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-14'), label="\n14 days after stay at home order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
ggtitle(label = 'Fairfax County, Virginia, COVID-19 Cases',subtitle = "source: https://www.fairfaxcounty.gov/covid19/case-information (chart by Peter Sabela)") +
ylab(label = "count") +
theme(panel.grid.minor =   element_blank(),
panel.grid.major =   element_line(colour = "white",size=0.75)) +
scale_y_continuous(position = "right", breaks = seq(from = 0,to = 2500,by = 100))
df %>% ggplot() +
geom_line(aes(x = date, y = count)) +
scale_x_date(date_labels="%m/%e",date_breaks  ="1 day") +
geom_vline(xintercept = ymd('2020-03-16'), colour="blue") +
geom_text(aes(x=ymd('2020-03-16'), label="\nSchools Closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-23'), colour="red") +
geom_text(aes(x=ymd('2020-03-23'), label="\nBusinesses and playgrounds closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-24'), colour="orange") +
geom_text(aes(x=ymd('2020-03-24'), label="\nGov Buildings and parks closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-31'), colour="brown") +
geom_text(aes(x=ymd('2020-03-31'), label="\nStay at Home Order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-30'),colour="blue", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-03-30'), label="\n14 days after schools closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-06'),colour="red", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-06'), label="\n14 days after businesses and parks closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-07'),colour="orange", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-07'), label="\n14 days after Gov buildings closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-14'),colour="brown", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-14'), label="\n14 days after stay at home order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
ggtitle(label = 'Fairfax County, Virginia, COVID-19 Cases',subtitle = "source: https://www.fairfaxcounty.gov/covid19/case-information (chart by Peter Sabela)") +
ylab(label = "count") +
theme(panel.grid.minor =   element_blank(),
panel.grid.major =   element_line(colour = "white",size=0.75),
axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(position = "right", breaks = seq(from = 0,to = 2500,by = 100))
df %>% ggplot() +
geom_line(aes(x = date, y = count)) +
scale_x_date(date_labels="%m/%e",date_breaks  ="1 day") +
geom_vline(xintercept = ymd('2020-03-16'), colour="blue") +
geom_text(aes(x=ymd('2020-03-16'), label="\nSchools Closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-23'), colour="red") +
geom_text(aes(x=ymd('2020-03-23'), label="\nBusinesses and playgrounds closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-24'), colour="orange") +
geom_text(aes(x=ymd('2020-03-24'), label="\nGov Buildings and parks closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-31'), colour="brown") +
geom_text(aes(x=ymd('2020-03-31'), label="\nStay at Home Order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-30'),colour="blue", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-03-30'), label="\n14 days after schools closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-06'),colour="red", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-06'), label="\n14 days after businesses and parks closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-07'),colour="orange", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-07'), label="\n14 days after Gov buildings closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-14'),colour="brown", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-14'), label="\n14 days after stay at home order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
ggtitle(label = 'Fairfax County, Virginia, COVID-19 Cases',subtitle = "source: https://www.fairfaxcounty.gov/covid19/case-information (chart by Peter Sabela)") +
ylab(label = "count") +
theme(panel.grid.minor =   element_blank(),
panel.grid.major =   element_line(colour = "white",size=0.75),
axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(position = "right", breaks = seq(from = 0,to = 2500,by = 100))
View(df)
diff(df$count)
2306-2124
?diff
abs(diff(df$count))
df %>% ggplot() +
geom_line(aes(x = date, y = count)) +
scale_x_date(date_labels="%m/%e",date_breaks  ="1 day") +
geom_vline(xintercept = ymd('2020-03-16'), colour="blue") +
geom_text(aes(x=ymd('2020-03-16'), label="\nSchools Closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-23'), colour="red") +
geom_text(aes(x=ymd('2020-03-23'), label="\nBusinesses and playgrounds closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-24'), colour="orange") +
geom_text(aes(x=ymd('2020-03-24'), label="\nGov Buildings and parks closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-31'), colour="brown") +
geom_text(aes(x=ymd('2020-03-31'), label="\nStay at Home Order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-30'),colour="blue", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-03-30'), label="\n14 days after schools closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-06'),colour="red", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-06'), label="\n14 days after businesses and parks closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-07'),colour="orange", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-07'), label="\n14 days after Gov buildings closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-14'),colour="brown", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-14'), label="\n14 days after stay at home order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
ggtitle(label = 'Fairfax County, Virginia, COVID-19 Cases',subtitle = "source: https://www.fairfaxcounty.gov/covid19/case-information (chart by Peter Sabela)") +
ylab(label = "count") +
theme(panel.grid.minor =   element_blank(),
panel.grid.major =   element_line(colour = "white",size=0.75),
axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(position = "right", breaks = seq(from = 0,to = 2500,by = 100)) +
geom_line(aes(x = date, y = abs(diff(count))))
abs(diff(df$count))
geom_line(aes(x = date, y = c(abs(diff(count)),0))
cabs(diff(df$count))
c(abs(diff(df$count)),1000)
deltas <- c(abs(diff(count)),0)
deltas <- c(abs(diff(df$count)),0)
df %>% ggplot() +
geom_line(aes(x = date, y = count)) +
scale_x_date(date_labels="%m/%e",date_breaks  ="1 day") +
geom_vline(xintercept = ymd('2020-03-16'), colour="blue") +
geom_text(aes(x=ymd('2020-03-16'), label="\nSchools Closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-23'), colour="red") +
geom_text(aes(x=ymd('2020-03-23'), label="\nBusinesses and playgrounds closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-24'), colour="orange") +
geom_text(aes(x=ymd('2020-03-24'), label="\nGov Buildings and parks closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-31'), colour="brown") +
geom_text(aes(x=ymd('2020-03-31'), label="\nStay at Home Order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-30'),colour="blue", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-03-30'), label="\n14 days after schools closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-06'),colour="red", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-06'), label="\n14 days after businesses and parks closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-07'),colour="orange", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-07'), label="\n14 days after Gov buildings closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-14'),colour="brown", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-14'), label="\n14 days after stay at home order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
ggtitle(label = 'Fairfax County, Virginia, COVID-19 Cases',subtitle = "source: https://www.fairfaxcounty.gov/covid19/case-information (chart by Peter Sabela)") +
ylab(label = "count") +
theme(panel.grid.minor =   element_blank(),
panel.grid.major =   element_line(colour = "white",size=0.75),
axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(position = "right", breaks = seq(from = 0,to = 2500,by = 100)) +
geom_line(aes(x = date, y = deltas))
df %>% ggplot() +
geom_line(aes(x = date, y = count)) +
scale_x_date(date_labels="%m/%e",date_breaks  ="1 day") +
geom_vline(xintercept = ymd('2020-03-16'), colour="blue") +
geom_text(aes(x=ymd('2020-03-16'), label="\nSchools Closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-23'), colour="red") +
geom_text(aes(x=ymd('2020-03-23'), label="\nBusinesses and playgrounds closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-24'), colour="orange") +
geom_text(aes(x=ymd('2020-03-24'), label="\nGov Buildings and parks closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-31'), colour="brown") +
geom_text(aes(x=ymd('2020-03-31'), label="\nStay at Home Order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-03-30'),colour="blue", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-03-30'), label="\n14 days after schools closed", y=my), colour="blue", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-06'),colour="red", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-06'), label="\n14 days after businesses and parks closed", y=my), colour="red", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-07'),colour="orange", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-07'), label="\n14 days after Gov buildings closed", y=my), colour="orange", angle=90, text=element_text(size=11)) +
geom_vline(xintercept = ymd('2020-04-14'),colour="brown", linetype="dotted", size = 1.5) +
geom_text(aes(x=ymd('2020-04-14'), label="\n14 days after stay at home order", y=my), colour="brown", angle=90, text=element_text(size=11)) +
ggtitle(label = 'Fairfax County, Virginia, COVID-19 Cases',subtitle = "source: https://www.fairfaxcounty.gov/covid19/case-information (chart by Peter Sabela)") +
ylab(label = "count") +
theme(panel.grid.minor =   element_blank(),
panel.grid.major =   element_line(colour = "white",size=0.75),
axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(position = "right", breaks = seq(from = 0,to = 2500,by = 100)) +
geom_col(aes(x = date, y = deltas))
